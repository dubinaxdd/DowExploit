cmake_minimum_required(VERSION 3.5)

project(DowExploit VERSION 0.1 LANGUAGES CXX)

set(TARGET_NAME DowExploit)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(DowExploit_INSTALATION_DIR  ${PROJECT_BINARY_DIR}/bin)
set(DowExploit_LIBRARY_DIR  ${PROJECT_BINARY_DIR}/lib)

message(STATUS "DowExploit_INSTALATION_DIR: " ${DowExploit_INSTALATION_DIR})
message(STATUS "DowExploit_LIBRARY_DIR: " ${DowExploit_LIBRARY_DIR})

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${DowExploit_INSTALATION_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${DowExploit_LIBRARY_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${DowExploit_LIBRARY_DIR})

file(MAKE_DIRECTORY ${DowExploit_INSTALATION_DIR})
file(MAKE_DIRECTORY ${DowExploit_LIBRARY_DIR})

link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})

set(DEPLOY_DIR ${DowExploit_INSTALATION_DIR})

add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/common/playbackLabelExploitLib)

find_package(QT NAMES Qt6 Qt5 COMPONENTS Widgets REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets REQUIRED)

set(PROJECT_SOURCES
        main.cpp
)

file(GLOB_RECURSE HEADERS_FILES dev/*.h)
file(GLOB_RECURSE SOURCES_FILES dev/*.cpp)
file(GLOB_RECURSE FORMS_FILES dev/*.ui)

set(HEADERS_FILES ${HEADERS_FILES})
set(SOURCES_FILES ${SOURCES_FILES})
set(FORMS_FILES ${FORMS_FILES})

add_executable(${TARGET_NAME} WIN32 ${PROJECT_SOURCES} ${HEADERS_FILES} ${SOURCES_FILES} ${FORMS_FILES})
target_link_libraries(${TARGET_NAME} PRIVATE Qt${QT_VERSION_MAJOR}::Widgets)

file(GLOB  SOURCE_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}/dev ${CMAKE_CURRENT_SOURCE_DIR}/dev/*)
set(SOURCE_DIRECTORIES ${SOURCE_DIRECTORIES})

message(STATUS "SOURCE_DIRECTORIES: " ${SOURCE_DIRECTORIES})

target_include_directories(${TARGET_NAME} PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${SOURCE_DIRECTORIES}
)

install(TARGETS ${TARGET_NAME} DESTINATION .)

get_target_property(_qmake_executable Qt5::qmake IMPORTED_LOCATION)
get_filename_component(_qt_bin_dir "${_qmake_executable}" DIRECTORY)
find_program(WINDEPLOYQT_EXECUTABLE windeployqt HINTS "${_qt_bin_dir}")



#add_custom_command( TARGET ${PROJECT_NAME} PRE_BUILD
#            COMMAND ${CMAKE_COMMAND} ARGS -E make_directory ${DEPLOY_DIR})

add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND "${CMAKE_COMMAND}" -E
    env PATH="${_qt_bin_dir}" "${WINDEPLOYQT_EXECUTABLE}"
    ARGS --no-translations
    --compiler-runtime
    --plugindir ${DEPLOY_DIR}/plugins
    --dir ${DEPLOY_DIR}
    --libdir ${DEPLOY_DIR}
    --qmldir ${_qt_bin_dir}/../qml
    $<TARGET_FILE:${PROJECT_NAME}>
    COMMENT "Running windeployqt for DowExploit..."
)
